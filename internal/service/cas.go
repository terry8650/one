// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package service

import (
	"context"
)

type (
	ICas interface {
		CheckAuth(Uid uint64, Node uint, Auth string) (bool, error)
		AddPolicy(role uint, nodeId uint) (bool, error)
		AddPolicies(ctx context.Context, role uint, nodeIds []uint) (bool, error)
		AddPoliciesMore(newRule map[int][]string) (added bool, err error)
		AddUserRoles(user uint64, roleIds []uint) (bool, error)
		AddRoleUsers(role uint64, userIds []uint) (bool, error)
		DeleteRoleNodes(role uint) (res bool, err error)
		GetRoleNodes(role uint) (res [][]string)
		GetUserRoles(UserId uint64) (roleIds []uint, err error)
		DeleteNodeRoles(node uint) (res bool, err error)
		DeleteUserRoles(user uint64) (res bool, err error)
		DelOnePolicy(Rule []string) (updated bool, err error)
		UpdatePolicy(oldRule, newRule []string) (updated bool, err error)
	}
)

var (
	localCas ICas
)

func Cas() ICas {
	if localCas == nil {
		panic("implement not found for interface ICas, forgot register?")
	}
	return localCas
}

func RegisterCas(i ICas) {
	localCas = i
}
